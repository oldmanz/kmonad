

(defcfg
  ;; For Linux
  input  (device-file "/dev/input/by-id/usb-04d9_daskeyboard-event-kbd")
  output (uinput-sink "My KMonad output"
    ;; To understand the importance of the following line, see the section on
    ;; Compose-key sequences at the near-bottom of this file.
    /"/run/current-system/sw/bin/sleep 1 && /run/current-system/sw/bin/setxkbmap -option compose:ralt")
  ;;cmp-seq ralt    ;; Set the compose key to `RightAlt'
  ;;cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; For Windows
  ;;input  (low-level-hook)
  ;;output (send-event-sink 500 30)

  ;; For MacOS
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  ;; Comment this if you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)


(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet cmp  rctl
)


(defalias
  fn1 (layer-toggle function1)
  spc (tap-hold-next-release 200 spc @fn1) 
  kil  C-A-del                ;; Bind kil to a button that Ctrl-Alt-deletes
)


(deflayer qwerty
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    bspc
  lctl a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           @spc            ralt rmet cmp rctl
)


(deflayer function1
  _    f1   f2   f3   f4   f5  f6   f7   f8   f9   f10  f11  f12    _
  caps   \)    7    8    9    =   /    pgup    up    pgdn    -    _    _    _
  _    \(    4    5    6    -   home  left down  right   end    _    _
  _    0    1   2   3      \   0    1    2    3    _    _
  _    _    _              _              _    _    _    _
)


